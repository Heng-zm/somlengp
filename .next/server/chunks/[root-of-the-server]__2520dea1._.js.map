{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/api/visit/route.ts"],"sourcesContent":["import { NextResponse } from 'next/server';\n\n// In a real application, this would interact with a database like Firebase Firestore\n// to increment a counter in a document.\n// For this example, we'll just log the request to the server console.\n\nlet visitorCount = 0; // In-memory counter for demonstration\n\nexport async function POST() {\n  try {\n    // In a real app, you'd do something like:\n    // const db = getFirestore();\n    // const docRef = doc(db, 'analytics', 'visitors');\n    // await updateDoc(docRef, { count: increment(1) });\n    \n    visitorCount++;\n    console.log(`New visitor recorded. Total simulated visitors: ${visitorCount}`);\n\n    return NextResponse.json({ success: true, message: 'Visitor tracked.' });\n  } catch (error) {\n    console.error('Error tracking visitor:', error);\n    return NextResponse.json(\n      { success: false, message: 'An internal error occurred.' },\n      { status: 500 }\n    );\n  }\n}\n"],"names":[],"mappings":";;;AAAA;;AAEA,qFAAqF;AACrF,wCAAwC;AACxC,sEAAsE;AAEtE,IAAI,eAAe,GAAG,sCAAsC;AAErD,eAAe;IACpB,IAAI;QACF,0CAA0C;QAC1C,6BAA6B;QAC7B,mDAAmD;QACnD,oDAAoD;QAEpD;QACA,QAAQ,GAAG,CAAC,CAAC,gDAAgD,EAAE,cAAc;QAE7E,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YAAE,SAAS;YAAM,SAAS;QAAmB;IACxE,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,2BAA2B;QACzC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CACtB;YAAE,SAAS;YAAO,SAAS;QAA8B,GACzD;YAAE,QAAQ;QAAI;IAElB;AACF","debugId":null}}]
}