{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.0-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/pdf-transcript-flow.ts"],"sourcesContent":["'use server';\n/**\n * @fileOverview An AI agent for transcribing text from PDF files.\n *\n * - transcribePdf - A function that handles the PDF to text transcription process.\n * - TranscribePdfInput - The input type for the function.\n * - TranscribePdfOutput - The return type for the function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {googleAI} from '@genkit-ai/googleai';\nimport {z} from 'genkit';\n\nconst TranscribePdfInputSchema = z.object({\n  pdfDataUri: z\n    .string()\n    .describe(\n      \"A PDF file, as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:application/pdf;base64,<encoded_data>'\"\n    ),\n  model: z\n    .string()\n    .optional()\n    .describe('The AI model to use for transcription.'),\n});\nexport type TranscribePdfInput = z.infer<typeof TranscribePdfInputSchema>;\n\nconst TranscribePdfOutputSchema = z.object({\n  text: z.string().describe('The transcribed text from the PDF.'),\n});\nexport type TranscribePdfOutput = z.infer<typeof TranscribePdfOutputSchema>;\n\nexport async function transcribePdf(\n  input: TranscribePdfInput\n): Promise<TranscribePdfOutput> {\n  return pdfTranscriptFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'pdfTranscriptPrompt',\n  input: {schema: TranscribePdfInputSchema},\n  output: {schema: TranscribePdfOutputSchema},\n  prompt: `You are an expert at extracting high-quality, clean text from PDF documents.\n  Extract all the text content from the provided PDF file.\n  Maintain the original structure, paragraphs, and line breaks as much as possible.\n  Do not add any commentary or extra text that is not in the original PDF.\n\nPDF File: {{media url=pdfDataUri}}`,\n  model: 'googleai/gemini-1.5-flash-latest',\n});\n\nconst pdfTranscriptFlow = ai.defineFlow(\n  {\n    name: 'pdfTranscriptFlow',\n    inputSchema: TranscribePdfInputSchema,\n    outputSchema: TranscribePdfOutputSchema,\n  },\n  async input => {\n    const model = input.model ? googleAI.model(input.model) : undefined;\n    const {output} = await prompt(input, {model});\n    if (!output) {\n      throw new Error(\n        'PDF to Text transcription failed: The model did not return any output.'\n      );\n    }\n    return output;\n  }\n);\n"],"names":[],"mappings":";;;;;AACA;;;;;;CAMC,GAED;AACA;AAAA;AACA;AAAA;;;;;;;AAEA,MAAM,2BAA2B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACxC,YAAY,uIAAA,CAAA,IAAC,CACV,MAAM,GACN,QAAQ,CACP;IAEJ,OAAO,uIAAA,CAAA,IAAC,CACL,MAAM,GACN,QAAQ,GACR,QAAQ,CAAC;AACd;AAGA,MAAM,4BAA4B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACzC,MAAM,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAC5B;AAGO,eAAe,cACpB,KAAyB;IAEzB,OAAO,kBAAkB;AAC3B;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAAwB;IACxC,QAAQ;QAAC,QAAQ;IAAyB;IAC1C,QAAQ,CAAC;;;;;kCAKuB,CAAC;IACjC,OAAO;AACT;AAEA,MAAM,oBAAoB,mHAAA,CAAA,KAAE,CAAC,UAAU,CACrC;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,QAAQ,MAAM,KAAK,GAAG,2KAAA,CAAA,WAAQ,CAAC,KAAK,CAAC,MAAM,KAAK,IAAI;IAC1D,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO,OAAO;QAAC;IAAK;IAC3C,IAAI,CAAC,QAAQ;QACX,MAAM,IAAI,MACR;IAEJ;IACA,OAAO;AACT;;;IAlCoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 317, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/text-to-speech-flow.ts"],"sourcesContent":["'use server';\n/**\n * @fileOverview An AI agent for converting text to speech.\n *\n * - textToSpeech - A function that handles the text to speech conversion process.\n * - TextToSpeechInput - The input type for the function.\n * - TextToSpeechOutput - The return type for the function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {googleAI} from '@genkit-ai/googleai';\nimport {z} from 'genkit';\nimport wav from 'wav';\n\nconst TextToSpeechInputSchema = z.string();\nexport type TextToSpeechInput = z.infer<typeof TextToSpeechInputSchema>;\n\nconst TextToSpeechOutputSchema = z.object({\n  audioDataUri: z.string().describe('The generated audio as a data URI.'),\n});\nexport type TextToSpeechOutput = z.infer<typeof TextToSpeechOutputSchema>;\n\nexport async function textToSpeech(\n  input: TextToSpeechInput\n): Promise<TextToSpeechOutput> {\n  return textToSpeechFlow(input);\n}\n\nasync function toWav(\n  pcmData: Buffer,\n  channels = 1,\n  rate = 24000,\n  sampleWidth = 2\n): Promise<string> {\n  return new Promise((resolve, reject) => {\n    const writer = new wav.Writer({\n      channels,\n      sampleRate: rate,\n      bitDepth: sampleWidth * 8,\n    });\n\n    let bufs = [] as any[];\n    writer.on('error', reject);\n    writer.on('data', function (d) {\n      bufs.push(d);\n    });\n    writer.on('end', function () {\n      resolve(Buffer.concat(bufs).toString('base64'));\n    });\n\n    writer.write(pcmData);\n    writer.end();\n  });\n}\n\nconst textToSpeechFlow = ai.defineFlow(\n  {\n    name: 'textToSpeechFlow',\n    inputSchema: TextToSpeechInputSchema,\n    outputSchema: TextToSpeechOutputSchema,\n  },\n  async query => {\n    const {media} = await ai.generate({\n      model: googleAI.model('gemini-2.5-flash-preview-tts'),\n      config: {\n        responseModalities: ['AUDIO'],\n        speechConfig: {\n          voiceConfig: {\n            prebuiltVoiceConfig: {voiceName: 'Algenib'},\n          },\n        },\n      },\n      prompt: query,\n    });\n    if (!media) {\n      throw new Error('No media returned from TTS model.');\n    }\n    const audioBuffer = Buffer.from(\n      media.url.substring(media.url.indexOf(',') + 1),\n      'base64'\n    );\n    const wavBase64 = await toWav(audioBuffer);\n    return {\n      audioDataUri: 'data:audio/wav;base64,' + wavBase64,\n    };\n  }\n);\n"],"names":[],"mappings":";;;;;AACA;;;;;;CAMC,GAED;AACA;AAAA;AACA;AAAA;AACA;;;;;;;;AAEA,MAAM,0BAA0B,uIAAA,CAAA,IAAC,CAAC,MAAM;AAGxC,MAAM,2BAA2B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACxC,cAAc,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AACpC;AAGO,eAAe,aACpB,KAAwB;IAExB,OAAO,iBAAiB;AAC1B;AAEA,eAAe,MACb,OAAe,EACf,WAAW,CAAC,EACZ,OAAO,KAAK,EACZ,cAAc,CAAC;IAEf,OAAO,IAAI,QAAQ,CAAC,SAAS;QAC3B,MAAM,SAAS,IAAI,4HAAA,CAAA,UAAG,CAAC,MAAM,CAAC;YAC5B;YACA,YAAY;YACZ,UAAU,cAAc;QAC1B;QAEA,IAAI,OAAO,EAAE;QACb,OAAO,EAAE,CAAC,SAAS;QACnB,OAAO,EAAE,CAAC,QAAQ,SAAU,CAAC;YAC3B,KAAK,IAAI,CAAC;QACZ;QACA,OAAO,EAAE,CAAC,OAAO;YACf,QAAQ,OAAO,MAAM,CAAC,MAAM,QAAQ,CAAC;QACvC;QAEA,OAAO,KAAK,CAAC;QACb,OAAO,GAAG;IACZ;AACF;AAEA,MAAM,mBAAmB,mHAAA,CAAA,KAAE,CAAC,UAAU,CACpC;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,KAAK,EAAC,GAAG,MAAM,mHAAA,CAAA,KAAE,CAAC,QAAQ,CAAC;QAChC,OAAO,2KAAA,CAAA,WAAQ,CAAC,KAAK,CAAC;QACtB,QAAQ;YACN,oBAAoB;gBAAC;aAAQ;YAC7B,cAAc;gBACZ,aAAa;oBACX,qBAAqB;wBAAC,WAAW;oBAAS;gBAC5C;YACF;QACF;QACA,QAAQ;IACV;IACA,IAAI,CAAC,OAAO;QACV,MAAM,IAAI,MAAM;IAClB;IACA,MAAM,cAAc,OAAO,IAAI,CAC7B,MAAM,GAAG,CAAC,SAAS,CAAC,MAAM,GAAG,CAAC,OAAO,CAAC,OAAO,IAC7C;IAEF,MAAM,YAAY,MAAM,MAAM;IAC9B,OAAO;QACL,cAAc,2BAA2B;IAC3C;AACF;;;IA/DoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 408, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/pdf-transcript/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {transcribePdf as '404e7f9a1b53c619250992f00f30e177053aa089a2'} from 'ACTIONS_MODULE0'\nexport {textToSpeech as '4050ac54cf9201e45356f56398fcd7f2aac0735f7e'} from 'ACTIONS_MODULE1'\n"],"names":[],"mappings":";AAAA;AACA","debugId":null}},
    {"offset": {"line": 466, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/pdf-transcript-page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const PdfTranscriptPage = registerClientReference(\n    function() { throw new Error(\"Attempted to call PdfTranscriptPage() from the server but PdfTranscriptPage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/pdf-transcript-page.tsx <module evaluation>\",\n    \"PdfTranscriptPage\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,wEACA","debugId":null}},
    {"offset": {"line": 480, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/pdf-transcript-page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const PdfTranscriptPage = registerClientReference(\n    function() { throw new Error(\"Attempted to call PdfTranscriptPage() from the server but PdfTranscriptPage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/pdf-transcript-page.tsx\",\n    \"PdfTranscriptPage\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,oBAAoB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACnD;IAAa,MAAM,IAAI,MAAM;AAAkP,GAC/Q,oDACA","debugId":null}},
    {"offset": {"line": 494, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 504, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/pdf-transcript/page.tsx"],"sourcesContent":["import { PdfTranscriptPage } from '@/components/pdf-transcript-page';\n\nexport default function PdfTranscript() {\n  return <PdfTranscriptPage />;\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS;IACtB,qBAAO,8OAAC,+IAAA,CAAA,oBAAiB;;;;;AAC3B","debugId":null}}]
}