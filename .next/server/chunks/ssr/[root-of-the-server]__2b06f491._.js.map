{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [\n    googleAI({\n      model: 'gemini-1.5-flash',\n    }),\n  ],\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QACP,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD,EAAE;YACP,OAAO;QACT;KACD;AACH","debugId":null}},
    {"offset": {"line": 229, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/pdf-transcript-flow.ts"],"sourcesContent":["\n'use server';\n/**\n * @fileOverview An AI agent for transcribing text from PDF files.\n *\n * - transcribePdf - A function that handles the PDF to text transcription process.\n * - TranscribePdfInput - The input type for the function.\n * - TranscribePdfOutput - The return type for the function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst TranscribePdfInputSchema = z.object({\n  pdfDataUri: z\n    .string()\n    .describe(\n      \"A PDF file, as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:application/pdf;base64,<encoded_data>'\"\n    ),\n});\nexport type TranscribePdfInput = z.infer<typeof TranscribePdfInputSchema>;\n\nconst TranscribePdfOutputSchema = z.object({\n  text: z.string().describe('The transcribed text from the PDF.'),\n});\nexport type TranscribePdfOutput = z.infer<typeof TranscribePdfOutputSchema>;\n\nexport async function transcribePdf(\n  input: TranscribePdfInput\n): Promise<TranscribePdfOutput> {\n  return pdfTranscriptFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'pdfTranscriptPrompt',\n  input: {schema: TranscribePdfInputSchema},\n  output: {schema: TranscribePdfOutputSchema},\n  prompt: `You are an expert at extracting high-quality, clean text from PDF documents.\nYour primary goal is to maintain the original layout and structure of the document, including columns, tables, paragraphs, and line breaks.\n\nIf the PDF contains text arranged in columns, you MUST preserve this columnar structure in your output. Use appropriate spacing or formatting to represent the columns as accurately as possible.\n\nExtract all the text content from the provided PDF file.\nDo not add any commentary or extra text that is not in the original PDF.\n\nPDF File: {{media url=pdfDataUri}}`,\n});\n\nconst pdfTranscriptFlow = ai.defineFlow(\n  {\n    name: 'pdfTranscriptFlow',\n    inputSchema: TranscribePdfInputSchema,\n    outputSchema: TranscribePdfOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    if (!output) {\n      throw new Error(\n        'PDF to Text transcription failed: The model did not return any output.'\n      );\n    }\n    return output;\n  }\n);\n"],"names":[],"mappings":";;;;;AAEA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,2BAA2B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACxC,YAAY,uIAAA,CAAA,IAAC,CACV,MAAM,GACN,QAAQ,CACP;AAEN;AAGA,MAAM,4BAA4B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACzC,MAAM,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAC5B;AAGO,eAAe,cACpB,KAAyB;IAEzB,OAAO,kBAAkB;AAC3B;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAAwB;IACxC,QAAQ;QAAC,QAAQ;IAAyB;IAC1C,QAAQ,CAAC;;;;;;;;kCAQuB,CAAC;AACnC;AAEA,MAAM,oBAAoB,mHAAA,CAAA,KAAE,CAAC,UAAU,CACrC;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,IAAI,CAAC,QAAQ;QACX,MAAM,IAAI,MACR;IAEJ;IACA,OAAO;AACT;;;IAnCoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 297, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/pdf-transcript/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {transcribePdf as '404e7f9a1b53c619250992f00f30e177053aa089a2'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 349, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/pdf-transcript/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/pdf-transcript/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/pdf-transcript/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAmS,GAChU,iEACA","debugId":null}},
    {"offset": {"line": 363, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/pdf-transcript/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/pdf-transcript/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/pdf-transcript/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA+Q,GAC5S,6CACA","debugId":null}},
    {"offset": {"line": 377, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}