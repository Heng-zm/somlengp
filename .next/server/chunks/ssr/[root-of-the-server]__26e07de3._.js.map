{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 207, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/googleai';\n\nexport const ai = genkit({\n  plugins: [googleAI()],\n  model: 'googleai/gemini-2.0-flash',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,2KAAA,CAAA,WAAQ,AAAD;KAAI;IACrB,OAAO;AACT","debugId":null}},
    {"offset": {"line": 228, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/pdf-to-word-flow.ts"],"sourcesContent":["'use server';\n/**\n * @fileOverview An AI agent for converting PDF files to editable Word documents.\n *\n * - convertPdfToWord - A function that handles the PDF to Word conversion.\n * - ConvertPdfToWordInput - The input type for the function.\n * - ConvertPdfToWordOutput - The return type for the function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {googleAI} from '@genkit-ai/googleai';\nimport {z} from 'genkit';\n\nconst ConvertPdfToWordInputSchema = z.object({\n  pdfDataUri: z\n    .string()\n    .describe(\n      \"A PDF file, as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:application/pdf;base64,<encoded_data>'\"\n    ),\n  model: z\n    .string()\n    .optional()\n    .describe('The AI model to use for conversion.'),\n});\nexport type ConvertPdfToWordInput = z.infer<typeof ConvertPdfToWordInputSchema>;\n\nconst ConvertPdfToWordOutputSchema = z.object({\n  docxDataUri: z.string().describe('The converted Word document as a data URI.'),\n});\nexport type ConvertPdfToWordOutput = z.infer<typeof ConvertPdfToWordOutputSchema>;\n\nexport async function convertPdfToWord(\n  input: ConvertPdfToWordInput\n): Promise<ConvertPdfToWordOutput> {\n  return pdfToWordFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'pdfToWordPrompt',\n  input: {schema: ConvertPdfToWordInputSchema},\n  output: {schema: ConvertPdfToWordOutputSchema},\n  prompt: `You are an expert at converting PDF documents into perfectly formatted Microsoft Word (.docx) files.\n  Convert the provided PDF file into a .docx file.\n  Preserve the original layout, formatting, text, images, and tables as accurately as possible.\n  The output must be a valid .docx file encoded as a data URI.\n\n  PDF File: {{media url=pdfDataUri}}`,\n  model: 'googleai/gemini-1.5-pro-latest',\n  config: {\n    // Requesting the specific DOCX mime type for the output\n    responseMimeType: \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n  }\n});\n\nconst pdfToWordFlow = ai.defineFlow(\n  {\n    name: 'pdfToWordFlow',\n    inputSchema: ConvertPdfToWordInputSchema,\n    outputSchema: ConvertPdfToWordOutputSchema,\n  },\n  async input => {\n    const model = input.model ? googleAI.model(input.model) : undefined;\n    const response = await prompt(input, {model});\n    const output = response.output();\n    \n    if (!output || !output.docxDataUri) {\n      throw new Error(\n        'PDF to Word conversion failed: The model did not return a valid document.'\n      );\n    }\n    return output;\n  }\n);\n"],"names":[],"mappings":";;;;;AACA;;;;;;CAMC,GAED;AACA;AAAA;AACA;AAAA;;;;;;;AAEA,MAAM,8BAA8B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC3C,YAAY,uIAAA,CAAA,IAAC,CACV,MAAM,GACN,QAAQ,CACP;IAEJ,OAAO,uIAAA,CAAA,IAAC,CACL,MAAM,GACN,QAAQ,GACR,QAAQ,CAAC;AACd;AAGA,MAAM,+BAA+B,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC5C,aAAa,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AACnC;AAGO,eAAe,iBACpB,KAA4B;IAE5B,OAAO,cAAc;AACvB;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAA2B;IAC3C,QAAQ;QAAC,QAAQ;IAA4B;IAC7C,QAAQ,CAAC;;;;;oCAKyB,CAAC;IACnC,OAAO;IACP,QAAQ;QACN,wDAAwD;QACxD,kBAAkB;IACpB;AACF;AAEA,MAAM,gBAAgB,mHAAA,CAAA,KAAE,CAAC,UAAU,CACjC;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,QAAQ,MAAM,KAAK,GAAG,2KAAA,CAAA,WAAQ,CAAC,KAAK,CAAC,MAAM,KAAK,IAAI;IAC1D,MAAM,WAAW,MAAM,OAAO,OAAO;QAAC;IAAK;IAC3C,MAAM,SAAS,SAAS,MAAM;IAE9B,IAAI,CAAC,UAAU,CAAC,OAAO,WAAW,EAAE;QAClC,MAAM,IAAI,MACR;IAEJ;IACA,OAAO;AACT;;;IAxCoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 306, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/pdf-to-word/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {convertPdfToWord as '405b34c07aa817b8ab10420a763f0266c0d2e86e16'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 358, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/pdf-to-word-page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const PdfToWordPage = registerClientReference(\n    function() { throw new Error(\"Attempted to call PdfToWordPage() from the server but PdfToWordPage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/pdf-to-word-page.tsx <module evaluation>\",\n    \"PdfToWordPage\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,qEACA","debugId":null}},
    {"offset": {"line": 372, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/pdf-to-word-page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport const PdfToWordPage = registerClientReference(\n    function() { throw new Error(\"Attempted to call PdfToWordPage() from the server but PdfToWordPage is on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/components/pdf-to-word-page.tsx\",\n    \"PdfToWordPage\",\n);\n"],"names":[],"mappings":";;;AAAA;;AACO,MAAM,gBAAgB,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EAC/C;IAAa,MAAM,IAAI,MAAM;AAA0O,GACvQ,iDACA","debugId":null}},
    {"offset": {"line": 386, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 396, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/pdf-to-word/page.tsx"],"sourcesContent":["import { PdfToWordPage } from '@/components/pdf-to-word-page';\n\nexport default function PdfToWord() {\n  return <PdfToWordPage />;\n}\n"],"names":[],"mappings":";;;;AAAA;;;AAEe,SAAS;IACtB,qBAAO,8OAAC,+IAAA,CAAA,gBAAa;;;;;AACvB","debugId":null}}]
}