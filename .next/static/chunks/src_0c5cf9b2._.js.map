{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 110, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,wSACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 145, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/pdf-transcript-flow.ts"],"sourcesContent":["\n'use server';\n/**\n * @fileOverview An AI agent for transcribing text from PDF files.\n *\n * - transcribePdf - A function that handles the PDF to text transcription process.\n * - TranscribePdfInput - The input type for the function.\n * - TranscribePdfOutput - The return type for the function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {googleAI} from '@genkit-ai/googleai';\nimport {z} from 'genkit';\nimport { MAX_BASE64_SIZE_BYTES } from '@/config';\n\nconst TranscribePdfInputSchema = z.object({\n  pdfDataUri: z\n    .string()\n    .describe(\n      \"A PDF file, as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:application/pdf;base64,<encoded_data>'\"\n    ),\n});\nexport type TranscribePdfInput = z.infer<typeof TranscribePdfInputSchema>;\n\nconst TranscribePdfOutputSchema = z.object({\n  text: z.string().describe('The transcribed text from the PDF.'),\n});\nexport type TranscribePdfOutput = z.infer<typeof TranscribePdfOutputSchema>;\n\nexport async function transcribePdf(\n  input: TranscribePdfInput\n): Promise<TranscribePdfOutput> {\n  return pdfTranscriptFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'pdfTranscriptPrompt',\n  model: googleAI.model('gemini-1.5-flash'),\n  input: {schema: TranscribePdfInputSchema},\n  output: {schema: TranscribePdfOutputSchema},\n  prompt: `You are an expert at extracting high-quality, clean text from PDF documents.\nYour primary goal is to maintain the original layout and structure of the document, including columns, tables, paragraphs, and line breaks.\n\nIf the PDF contains text arranged in columns, you MUST preserve this columnar structure in your output. Use appropriate spacing or formatting to represent the columns as accurately as possible.\n\nExtract all the text content from the provided PDF file.\nDo not add any commentary or extra text that is not in the original PDF.\n\nPDF File: {{media url=pdfDataUri}}`,\n});\n\nconst pdfTranscriptFlow = ai.defineFlow(\n  {\n    name: 'pdfTranscriptFlow',\n    inputSchema: TranscribePdfInputSchema,\n    outputSchema: TranscribePdfOutputSchema,\n  },\n  async input => {\n    if (input.pdfDataUri.length > MAX_BASE64_SIZE_BYTES) {\n        throw new Error('413: Payload Too Large. PDF file size exceeds the server limit.');\n    }\n    const {output} = await prompt(input);\n    if (!output) {\n      throw new Error(\n        'PDF to Text transcription failed: The model did not return any output.'\n      );\n    }\n    return output;\n  }\n);\n"],"names":[],"mappings":";;;;;;IA6BsB,gBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 161, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/sheet.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SheetPrimitive from \"@radix-ui/react-dialog\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Sheet = SheetPrimitive.Root\n\nconst SheetTrigger = SheetPrimitive.Trigger\n\nconst SheetClose = SheetPrimitive.Close\n\nconst SheetPortal = SheetPrimitive.Portal\n\nconst SheetOverlay = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n    ref={ref}\n  />\n))\nSheetOverlay.displayName = SheetPrimitive.Overlay.displayName\n\nconst sheetVariants = cva(\n  \"fixed z-50 gap-4 bg-background p-6 shadow-lg transition ease-in-out data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:duration-300 data-[state=open]:duration-500\",\n  {\n    variants: {\n      side: {\n        top: \"inset-x-0 top-0 border-b data-[state=closed]:slide-out-to-top data-[state=open]:slide-in-from-top\",\n        bottom:\n          \"inset-x-0 bottom-0 border-t data-[state=closed]:slide-out-to-bottom data-[state=open]:slide-in-from-bottom\",\n        left: \"inset-y-0 left-0 h-full w-3/4 border-r data-[state=closed]:slide-out-to-left data-[state=open]:slide-in-from-left sm:max-w-sm\",\n        right:\n          \"inset-y-0 right-0 h-full w-3/4  border-l data-[state=closed]:slide-out-to-right data-[state=open]:slide-in-from-right sm:max-w-sm\",\n      },\n    },\n    defaultVariants: {\n      side: \"right\",\n    },\n  }\n)\n\ninterface SheetContentProps\n  extends React.ComponentPropsWithoutRef<typeof SheetPrimitive.Content>,\n    VariantProps<typeof sheetVariants> {}\n\nconst SheetContent = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Content>,\n  SheetContentProps\n>(({ side = \"right\", className, children, ...props }, ref) => (\n  <SheetPortal>\n    <SheetOverlay />\n    <SheetPrimitive.Content\n      ref={ref}\n      className={cn(sheetVariants({ side }), className)}\n      {...props}\n    >\n      {children}\n      <SheetPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-secondary\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </SheetPrimitive.Close>\n    </SheetPrimitive.Content>\n  </SheetPortal>\n))\nSheetContent.displayName = SheetPrimitive.Content.displayName\n\nconst SheetHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetHeader.displayName = \"SheetHeader\"\n\nconst SheetFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nSheetFooter.displayName = \"SheetFooter\"\n\nconst SheetTitle = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold text-foreground\", className)}\n    {...props}\n  />\n))\nSheetTitle.displayName = SheetPrimitive.Title.displayName\n\nconst SheetDescription = React.forwardRef<\n  React.ElementRef<typeof SheetPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof SheetPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <SheetPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nSheetDescription.displayName = SheetPrimitive.Description.displayName\n\nexport {\n  Sheet,\n  SheetPortal,\n  SheetOverlay,\n  SheetTrigger,\n  SheetClose,\n  SheetContent,\n  SheetHeader,\n  SheetFooter,\n  SheetTitle,\n  SheetDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AACA;AAEA;AAPA;;;;;;;AASA,MAAM,QAAQ,qKAAA,CAAA,OAAmB;AAEjC,MAAM,eAAe,qKAAA,CAAA,UAAsB;AAE3C,MAAM,aAAa,qKAAA,CAAA,QAAoB;AAEvC,MAAM,cAAc,qKAAA,CAAA,SAAqB;AAEzC,MAAM,6BAAe,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,UAAsB;QACrB,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,2JACA;QAED,GAAG,KAAK;QACT,KAAK;;;;;;KAVH;AAaN,aAAa,WAAW,GAAG,qKAAA,CAAA,UAAsB,CAAC,WAAW;AAE7D,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB,oMACA;IACE,UAAU;QACR,MAAM;YACJ,KAAK;YACL,QACE;YACF,MAAM;YACN,OACE;QACJ;IACF;IACA,iBAAiB;QACf,MAAM;IACR;AACF;AAOF,MAAM,6BAAe,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGlC,CAAC,EAAE,OAAO,OAAO,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpD,6LAAC;;0BACC,6LAAC;;;;;0BACD,6LAAC,qKAAA,CAAA,UAAsB;gBACrB,KAAK;gBACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;oBAAE;gBAAK,IAAI;gBACtC,GAAG,KAAK;;oBAER;kCACD,6LAAC,qKAAA,CAAA,QAAoB;wBAAC,WAAU;;0CAC9B,6LAAC,+LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,6LAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,aAAa,WAAW,GAAG,qKAAA,CAAA,UAAsB,CAAC,WAAW;AAE7D,MAAM,cAAc,CAAC,EACnB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,oDACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,YAAY,WAAW,GAAG;AAE1B,MAAM,cAAc,CAAC,EACnB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,QAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,yCAAyC;QACtD,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG,qKAAA,CAAA,QAAoB,CAAC,WAAW;AAEzD,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,cAA0B;QACzB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,iBAAiB,WAAW,GAAG,qKAAA,CAAA,cAA0B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 329, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 368, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAAA;AAAA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,qKAAA,CAAA,OAAoB;AAEnC,MAAM,cAAc,qKAAA,CAAA,QAAqB;AAEzC,MAAM,cAAc,qKAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC,qKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,mTACA;QAED,GAAG,KAAK;;YAER;0BACD,6LAAC,qKAAA,CAAA,OAAoB;gBAAC,OAAO;0BAC3B,cAAA,6LAAC,uNAAA,CAAA,cAAW;oBAAC,WAAU;;;;;;;;;;;;;;;;;;AAI7B,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,qCAAuB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAG1C,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,iBAA8B;QAC7B,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,wDACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,mNAAA,CAAA,YAAS;YAAC,WAAU;;;;;;;;;;;MAZnB;AAeN,qBAAqB,WAAW,GAAG,qKAAA,CAAA,iBAA8B,CAAC,WAAW;AAE7E,MAAM,uCAAyB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAG5C,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,mBAAgC;QAC/B,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,wDACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,uNAAA,CAAA,cAAW;YAAC,WAAU;;;;;;;;;;;MAZrB;AAeN,uBAAuB,WAAW,GAChC,qKAAA,CAAA,mBAAgC,CAAC,WAAW;AAE9C,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,WAAW,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACzD,6LAAC,qKAAA,CAAA,SAAsB;kBACrB,cAAA,6LAAC,qKAAA,CAAA,UAAuB;YACtB,KAAK;YACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,ucACA,aAAa,YACX,mIACF;YAEF,UAAU;YACT,GAAG,KAAK;;8BAET,6LAAC;;;;;8BACD,6LAAC,qKAAA,CAAA,WAAwB;oBACvB,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,OACA,aAAa,YACX;8BAGH;;;;;;8BAEH,6LAAC;;;;;;;;;;;;;;;;;AAIP,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,0CAA0C;QACvD,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,qKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC,qKAAA,CAAA,OAAoB;QACnB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,6NACA;QAED,GAAG,KAAK;;0BAET,6LAAC;gBAAK,WAAU;0BACd,cAAA,6LAAC,qKAAA,CAAA,gBAA6B;8BAC5B,cAAA,6LAAC,uMAAA,CAAA,QAAK;wBAAC,WAAU;;;;;;;;;;;;;;;;0BAIrB,6LAAC,qKAAA,CAAA,WAAwB;0BAAE;;;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,qKAAA,CAAA,OAAoB,CAAC,WAAW;AAEzD,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,YAAyB;QACxB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG,qKAAA,CAAA,YAAyB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 583, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/config.ts"],"sourcesContent":["// src/config.ts\n\n/**\n * The maximum file size in megabytes (MB) allowed for uploads.\n * This limit is enforced on the client-side before uploading\n * and on the server-side upon receiving the file.\n * NOTE: Vercel Hobby plan has a 4.5MB body size limit for Serverless Functions.\n * Base64 encoding adds ~37% overhead. To stay safely under 4.5MB,\n * we set the raw file limit to 3MB (3MB * 1.37 ≈ 4.11MB).\n * The user has requested to increase this to 8MB. This may cause issues on\n * hosting platforms with smaller limits.\n */\nexport const MAX_FILE_SIZE_MB = 8;\n\n/**\n * The maximum file size in bytes.\n * Derived from MAX_FILE_SIZE_MB.\n */\nexport const MAX_FILE_SIZE_BYTES = MAX_FILE_SIZE_MB * 1024 * 1024;\n\n/**\n * The maximum size for a base64-encoded string, accounting for the ~37% overhead.\n * This is used for server-side validation in Genkit flows.\n */\nexport const MAX_BASE64_SIZE_BYTES = MAX_FILE_SIZE_BYTES * 1.37;\n"],"names":[],"mappings":"AAAA,gBAAgB;AAEhB;;;;;;;;;CASC;;;;;AACM,MAAM,mBAAmB;AAMzB,MAAM,sBAAsB,mBAAmB,OAAO;AAMtD,MAAM,wBAAwB,sBAAsB","debugId":null}},
    {"offset": {"line": 610, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/features/transcript-pdf/components/pdf-transcript-page.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { useState, useRef, useMemo, useCallback, useContext } from 'react';\nimport { FileUp, Download, Copy, Loader2, FileText, X } from 'lucide-react';\nimport { Button } from '@/components/ui/button';\nimport { useToast } from '@/hooks/use-toast';\nimport { cn } from '@/lib/utils';\nimport { Card } from '@/components/ui/card';\nimport { Textarea } from '@/components/ui/textarea';\nimport { transcribePdf } from '@/ai/flows/pdf-transcript-flow';\nimport { allTranslations } from '@/lib/translations';\nimport { LanguageContext } from '@/contexts/language-context';\nimport { Sheet, SheetContent, SheetHeader, SheetTitle, SheetTrigger, SheetDescription } from '@/components/ui/sheet';\nimport { Label } from '@/components/ui/label';\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from '@/components/ui/select';\nimport { MAX_FILE_SIZE_BYTES, MAX_FILE_SIZE_MB } from '@/config';\n\nconst blobToBase64 = (blob: Blob): Promise<string> => {\n  return new Promise((resolve, reject) => {\n    const reader = new FileReader();\n    reader.onloadend = () => {\n      if (typeof reader.result === 'string') {\n        resolve(reader.result);\n      } else {\n        reject(new Error('Failed to convert blob to Base64.'));\n      }\n    };\n    reader.onerror = reject;\n    reader.readAsDataURL(blob);\n  });\n};\n\nexport function PdfTranscriptPage() {\n  const [pdfFile, setPdfFile] = useState<File | null>(null);\n  const [isTranscribing, setIsTranscribing] = useState(false);\n  const [transcribedText, setTranscribedText] = useState('');\n  const [isDragging, setIsDragging] = useState(false);\n  const [isExportSheetOpen, setIsExportSheetOpen] = useState(false);\n  const [exportFormat, setExportFormat] = useState('docx');\n\n  const { toast } = useToast();\n  const fileInputRef = useRef<HTMLInputElement | null>(null);\n\n  const langContext = useContext(LanguageContext);\n  if (!langContext) {\n    throw new Error('PdfTranscriptPage must be used within a LanguageProvider');\n  }\n  const { language } = langContext;\n  const t = useMemo(() => allTranslations[language], [language]);\n  \n  const handleFileSelect = useCallback(async (file: File | null | undefined) => {\n    if (!file) return;\n\n    if (file.size > MAX_FILE_SIZE_BYTES) {\n        toast({\n            title: t.fileTooLargeTitle,\n            description: t.fileTooLargeDescription(MAX_FILE_SIZE_MB),\n            variant: \"destructive\",\n        });\n        return;\n    }\n\n    if (file.type !== 'application/pdf') {\n      toast({\n        title: t.invalidFileType,\n        description: t.selectPdfFile,\n        variant: \"destructive\",\n      });\n      return;\n    }\n    \n    setPdfFile(file);\n    setIsTranscribing(true);\n    setTranscribedText('');\n\n    try {\n      const pdfDataUri = await blobToBase64(file);\n      const result = await transcribePdf({ pdfDataUri });\n\n      if (result && result.text) {\n        setTranscribedText(result.text);\n      } else {\n        toast({\n          title: t.transcriptionFailed,\n          description: t.noText,\n          variant: \"destructive\",\n        });\n      }\n    } catch (e: any) {\n      console.error(e);\n      let title = t.transcriptionError;\n      let description = e.message || \"An error occurred while processing your PDF.\";\n      const errorMessage = (e.message || '').toLowerCase();\n      if (errorMessage.includes('413') || errorMessage.includes('too large')) {\n        title = t.fileTooLargeTitle;\n        description = t.fileTooLargeDescription(MAX_FILE_SIZE_MB);\n      } else if (errorMessage.includes('429') || errorMessage.includes('rate limit')) {\n          title = t.rateLimitExceeded;\n          description = t.rateLimitMessage;\n      }\n      toast({\n        title: title,\n        description: description,\n        variant: \"destructive\",\n      });\n      setPdfFile(null); // Clear the file on error\n    } finally {\n      setIsTranscribing(false);\n    }\n  }, [t, toast]);\n\n\n  const handleDragEvents = (e: React.DragEvent<HTMLDivElement>) => {\n    e.preventDefault();\n    e.stopPropagation();\n  };\n\n  const handleDragEnter = (e: React.DragEvent<HTMLDivElement>) => {\n    handleDragEvents(e);\n    if (e.dataTransfer.items && e.dataTransfer.items.length > 0) {\n      setIsDragging(true);\n    }\n  };\n\n  const handleDragLeave = (e: React.DragEvent<HTMLDivElement>) => {\n    handleDragEvents(e);\n    setIsDragging(false);\n  };\n  \n  const handleDrop = (e: React.DragEvent<HTMLDivElement>) => {\n    handleDragEvents(e);\n    setIsDragging(false);\n    handleFileSelect(e.dataTransfer.files?.[0]);\n  };\n\n  const handleExport = async () => {\n    if (!transcribedText.trim()) {\n        toast({\n            title: t.exportFailed,\n            description: t.noTextToExport,\n            variant: \"destructive\",\n        });\n        return;\n    }\n    // Lazy load for performance\n    const { exportTranscript: exportFn } = await import('@/lib/client-export');\n    exportFn(transcribedText, exportFormat as 'docx' | 'txt', [], toast);\n    setIsExportSheetOpen(false);\n  };\n  \n  const handleCopy = () => {\n    if (!transcribedText) return;\n    navigator.clipboard.writeText(transcribedText).then(() => {\n        toast({ title: t.copied });\n    });\n  };\n\n  const isReadyForContent = !isTranscribing && transcribedText;\n\n  const pdfExportFormats = useMemo(() => ({\n    docx: 'DOCX (Word Document)',\n    txt: 'TXT (Plain Text)',\n  }), []);\n\n  const clearFile = () => {\n    setPdfFile(null);\n    setTranscribedText('');\n    if (fileInputRef.current) {\n      fileInputRef.current.value = '';\n    }\n  }\n  \n  return (\n    <div \n        className=\"flex flex-col h-full bg-background text-foreground\"\n        onDragEnter={handleDragEnter}\n        onDragOver={handleDragEvents}\n        onDragLeave={handleDragLeave}\n        onDrop={handleDrop}\n    >\n        <main className=\"flex-grow p-4 md:p-6 relative\">\n            {!pdfFile ? (\n                 <div\n                 className={cn(\n                   'flex cursor-pointer flex-col items-center justify-center rounded-2xl border-2 border-dashed bg-card text-center transition-colors border-border h-full min-h-[70vh]',\n                   isDragging && 'border-primary bg-primary/10'\n                 )}\n                 onClick={() => fileInputRef.current?.click()}\n               >\n                 <FileUp className=\"mb-4 h-16 w-16 text-muted-foreground/30\" />\n                 <h3 className=\"text-xl font-semibold\">{t.chooseFile}</h3>\n                 <p className=\"mt-2 text-muted-foreground\">{t.dropPdf}</p>\n               </div>\n            ) : (\n                <Card className=\"shadow-sm overflow-hidden rounded-2xl h-full flex flex-col\">\n                    <div className=\"flex-shrink-0 flex items-center justify-between p-3 border-b bg-muted/30\">\n                        <div className=\"flex items-center gap-2 overflow-hidden\">\n                            <FileText className=\"w-5 h-5 text-primary\"/>\n                            <span className=\"font-medium truncate\">{pdfFile.name}</span>\n                            <span className=\"text-sm text-muted-foreground\">{`${(pdfFile.size / 1024 / 1024).toFixed(2)} MB`}</span>\n                        </div>\n                        <Button onClick={clearFile} variant=\"ghost\" size=\"icon\" className=\"rounded-full\">\n                            <X className=\"w-4 h-4\" />\n                            <span className=\"sr-only\">Clear file</span>\n                        </Button>\n                    </div>\n                    <div className=\"flex-grow relative\">\n                        {isTranscribing && (\n                            <div className=\"absolute inset-0 bg-background/80 flex flex-col items-center justify-center z-10\">\n                                <Loader2 className=\"h-12 w-12 animate-spin text-primary mb-4\" />\n                                <p className=\"text-lg font-medium text-foreground\">{t.transcribing}</p>\n                            </div>\n                        )}\n                        <Textarea\n                            value={transcribedText}\n                            readOnly\n                            placeholder={isTranscribing ? 'Transcribing...' : t.transcribedTextPlaceholder}\n                            className=\"h-[calc(76vh-60px)] w-full resize-none text-base leading-relaxed p-6 border-0 focus-visible:ring-0 focus-visible:ring-offset-0\"\n                            aria-label=\"Transcribed Text\"\n                            disabled={isTranscribing}\n                        />\n                    </div>\n                </Card>\n            )}\n\n            <input\n                type=\"file\"\n                ref={fileInputRef}\n                onChange={(e) => handleFileSelect(e.target.files?.[0])}\n                className=\"hidden\"\n                accept=\"application/pdf\"\n            />\n        </main>\n        \n        {pdfFile && (\n          <footer className=\"flex-shrink-0 flex items-center justify-center gap-2 p-4 bg-background border-t\">\n            <div className=\"w-full max-w-lg flex gap-2 items-center justify-center\">\n                  <Button onClick={handleCopy} variant=\"outline\" size=\"icon\" className=\"h-12 w-12 rounded-full\" disabled={isTranscribing || !isReadyForContent}>\n                      <Copy className=\"h-5 w-5\" />\n                      <span className=\"sr-only\">{t.copy}</span>\n                  </Button>\n                  <Sheet open={isExportSheetOpen} onOpenChange={setIsExportSheetOpen}>\n                    <SheetTrigger asChild>\n                      <Button size=\"lg\" className=\"h-12 px-6 rounded-full bg-accent text-accent-foreground hover:bg-accent/90 flex-1\" disabled={isTranscribing || !isReadyForContent}>\n                          {isTranscribing ? <Loader2 className=\"animate-spin h-5 w-5\" /> : <Download className=\"h-5 w-5\" />}\n                          <span className=\"ml-2 sm:inline font-bold\">{isTranscribing ? t.transcribing : t.download}</span>\n                      </Button>\n                    </SheetTrigger>\n                    <SheetContent side=\"bottom\" className=\"rounded-t-lg\">\n                      <SheetHeader className=\"text-left\">\n                        <SheetTitle>{t.exportSettings}</SheetTitle>\n                        <SheetDescription>{t.chooseFormat}</SheetDescription>\n                      </SheetHeader>\n                      <div className=\"grid gap-6 py-6\">\n                        <div className=\"grid gap-3\">\n                          <Label>{t.exportFormat}</Label>\n                           <Select value={exportFormat} onValueChange={setExportFormat}>\n                               <SelectTrigger>\n                                   <SelectValue placeholder=\"Select format\" />\n                               </SelectTrigger>\n                               <SelectContent>\n                                   {Object.entries(pdfExportFormats).map(([value, label]) => (\n                                   <SelectItem key={value} value={value}>{label}</SelectItem>\n                                   ))}\n                               </SelectContent>\n                           </Select>\n                        </div>\n                        <Button onClick={handleExport} size=\"lg\" className=\"bg-accent text-accent-foreground hover:bg-accent/90\" disabled={isTranscribing}>\n                           {isTranscribing ? (\n                               <>\n                                   <Loader2 className=\"mr-2 animate-spin\" />\n                                   {t.transcribing}\n                               </>\n                           ) : (\n                               <>\n                                   <Download className=\"mr-2\" />\n                                   {t.exportTranscript}\n                               </>\n                           )}\n                        </Button>\n                      </div>\n                    </SheetContent>\n                  </Sheet>\n            </div>\n          </footer>\n        )}\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1227, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/pdf-transcript/page.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { PdfTranscriptPage } from '@/features/transcript-pdf/components/pdf-transcript-page';\nimport { FeaturePageLayout } from '@/layouts/feature-page-layout';\n\nexport default function PdfTranscript() {\n  return (\n      <FeaturePageLayout title=\"PDF Transcript\" showModelSelector={true}>\n        <PdfTranscriptPage />\n      </FeaturePageLayout>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AAHA;;;;AAKe,SAAS;IACtB,qBACI,6LAAC,+IAAA,CAAA,oBAAiB;QAAC,OAAM;QAAiB,mBAAmB;kBAC3D,cAAA,6LAAC,mLAAA,CAAA,oBAAiB;;;;;;;;;;AAG1B;KANwB","debugId":null}}]
}